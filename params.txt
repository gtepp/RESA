%-- Set network, stations, channels (location could easily be added if needed)

params.net.str = 'AV'; % currently assumes only one network (could easily be changed)
params.sta.str = 'OKRE,OKER,OKTU,MAPS,MGOD,MNAT'; % list of stations
params.cha.str = 'EHZ,EHZ,EHZ,BHZ,BHZ,BHZ'; % list of channels for each station (in same order)


%-- File information

directory = '/Users/username/Documents/Alarm_folder/'; % directory to save files to

structfile = 'RESA_structures_cron.mat'; % name of structures file
logfile = 'sequence_log_cron.txt'; % name of log files


%-- General data parameters

dbtype = 'WIN'; % database type (IRIS or Winston (WIN, default))

mySource = datasource('winston',IPaddress,Port); % data source object (Winston source ONLY)

twin = 10.8; % in minutes; data window to search
% twin includes the time window overlap (set = l_lta + evwin to avoid duplicate events)


%-- Filter parameters (assume bandpass; can make prompt later)

poles = 4;

lf = 2; % in Hz
hf = 7; % in Hz


%-- STA-LTA Parameters

min_sep = 10; % in seconds
min_dur = 6; % in seconds
l_sta = 1; % in seconds (measured at the right end of the LTA window)
l_lta = 20; % in seconds

threson = 2.3; % threshold for event on
thresoff = 0.6; % threshold for event off


%-- Event Waveform & X-correlation parameters

buff = 2; % in sec; time of window start before event onset
evwin = 28; % in sec; length of event waveform window

tempmax = 15; % max # of template events to hold in memory

mincc = 0.625;
maxlag = 3; % in sec; max allowable lag time for match (note: may be good to set as 2*l_sta)
xcst = 1; % in sec; cross-correlation start time
xcend = 16; % in sec; cross-correlation end time (must be <= evwin)


%-- Sequence parameters

minev = 5; % minimimum # of events required for sequence
seqT = 90; % in minutes; time period within which sequence can be declared
minevoff = 3; % minimimum # of events required for sequence to remain on (will turn off when # drops below this)
seqToff = seqT; % in minutes; time period to use for sequence off

l2chk = 1; % check for increasing (level 2) sequence (1 for on, 0 for off (default))
minevl2 = 5; % minimimum # of events required for increased (lv. 2) sequence
seqTl2 = 25; % in minutes; time period within which increased (lv. 2) sequence can be declared
minevoffl2 = 3; % minimimum # of events required for (lv. 2) sequence to remain on (will turn off when # drops below this)
seqToffl2 = seqTl2; % in minutes; time period to use for (lv. 2) sequence off

minsta = 2; % min # of stations with seq on needed to send alert
minreq = 1; % min # of stations required from preferred list to send alert
reqstastr = 'MAPS,MGOD,OKER'; % list of preferred/required stations
offwait = 0; % # of time windows with no sequences on before level 1 "off" alert is sent (set to 0 for none)
offwaitl2 = 0; % # of time windows with no sequences on before level 2 "off" alert is sent (set to 0 for none)
seqoffwin = 0; % # of extra time windows to wait before station-level sequence turns "off" (set to 0 for none)
holdt = 0; % in minutes; amount of time required before alert status can change to "off"
holdtl2 = 0; % in minutes; amount of time required before level 2 alert status can change to "off"


%-- Email/text alerts

% this is the "from" address
setpref('Internet','E_mail','Bogo_eventseq.alarm@usgs.gov'); % this can be anything@usgs.gov (doesn't need to be real, just so long as the '@usgs.gov' is there)

% each row: {email, phone, lv 1 on, lv 1 off, lv 2 on, lv 2 off} (1=email, 2=phone, 0=none)
sendlist = {'email@mail.com','cellnumber@provider.ext',1,1,1,1;...
    'email@mail.com','cellnumber@provider.ext',2,2,2,2};
sendtoadd = 'cellnumber@provider.ext'; % additional list to send to (testing for my phone)


sendchk = 1; % send a check that code is running (1=yes, 0=no (default))
sendtochk = {'email@mail.com'}; % list of email addresses to send check alert to
